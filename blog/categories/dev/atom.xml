<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: dev | Tym-Project]]></title>
  <link href="http://tym-project.github.com/blog/categories/dev/atom.xml" rel="self"/>
  <link href="http://tym-project.github.com/"/>
  <updated>2012-09-16T16:55:02+00:00</updated>
  <id>http://tym-project.github.com/</id>
  <author>
    <name><![CDATA[Tym]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Fade-in/Fade-out effect with Java]]></title>
    <link href="http://tym-project.github.com/2009/03/24/fade-infade-out-effect-with-java/"/>
    <updated>2009-03-24T23:19:06+00:00</updated>
    <id>http://tym-project.github.com/2009/03/24/fade-infade-out-effect-with-java</id>
    <content type="html"><![CDATA[<p>A nice face-in when a text appears is developer's drug...but how is it
possible to achieve that using Java/Swing?</p>

<p>The easiest way I found (there must be others!) is to use <code>AWTUtilities</code> (to
handle transparency) and a Timer (for step by step in or out effect).</p>

<!-- more -->


<p>As an example, let's use a <code>JDialog</code> which we are going to fade-out, until
it's full disappearance. It's literally a "splash screen".</p>

<p>Java is objet oriented (who isn't nowadays...), so let's create a class
dedicated to fade-out :
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kn">import</span> <span class="nn">java.util.TimerTask</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">javax.swing.JDialog</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.sun.awt.AWTUtilities</span><span class="o">;&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Fader</span> <span class="kd">extends</span> <span class="n">TimerTask</span> <span class="o">{&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="kd">private</span> <span class="n">JDialog</span> <span class="n">jDialog</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kd">public</span> <span class="nf">Fader</span><span class="o">(</span><span class="n">JDialog</span> <span class="n">jDialog</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>    <span class="k">this</span><span class="o">.</span><span class="na">jDialog</span> <span class="o">=</span> <span class="n">jDialog</span><span class="o">;</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="c1">//As Fader extends from Timer, it&#39;s the run() method which does the main job</span>
</span><span class='line'><span class="nd">@Override</span> <span class="kd">public</span> <span class="kt">void</span> <span class="n">run</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>    <span class="c1">//The opacity is reduced by 0,01f steps</span>
</span><span class='line'>    <span class="c1">//If this value equals 0 (invisible), we close the JDialog with dispose()</span>
</span><span class='line'><span class="k">if</span><span class="o">(</span><span class="n">AWTUtilities</span><span class="o">.</span><span class="na">getWindowOpacity</span><span class="o">(</span><span class="n">jDialog</span><span class="o">)</span> <span class="o">&amp;</span><span class="n">amp</span><span class="o">;</span><span class="n">gt</span><span class="o">;</span> <span class="mf">0.01f</span><span class="o">){</span>
</span><span class='line'>    <span class="n">AWTUtilities</span><span class="o">.</span><span class="na">setWindowOpacity</span><span class="o">(</span><span class="n">jDialog</span><span class="o">,</span>
</span><span class='line'>    <span class="n">AWTUtilities</span><span class="o">.</span><span class="na">getWindowOpacity</span><span class="o">(</span><span class="n">jDialog</span><span class="o">)-</span><span class="mf">0.01f</span><span class="o">);</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="k">else</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">jDialog</span><span class="o">.</span><span class="na">dispose</span><span class="o">();</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
And the class containing our JDialog:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kn">import</span> <span class="nn">java.awt.Font</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">java.awt.GridLayout</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">java.util.Timer</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">javax.swing.JDialog</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">javax.swing.JLabel</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">javax.swing.JPanel</span><span class="o">;&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Splash</span> <span class="kd">extends</span> <span class="n">JDialog</span> <span class="o">{&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="kd">public</span> <span class="n">Splash</span><span class="o">()</span> <span class="o">{</span> <span class="c1">//The JDialog will be in the center of the screen</span>
</span><span class='line'>    <span class="n">setLocationRelativeTo</span><span class="o">(</span><span class="kc">null</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">//Title bar is deactivated setUndecorated(true);</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">JPanel</span> <span class="n">main</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JPanel</span><span class="o">(</span><span class="k">new</span> <span class="n">GridLayout</span><span class="o">(</span><span class="mi">1</span><span class="o">,</span> <span class="mi">1</span><span class="o">));</span>
</span><span class='line'>    <span class="n">JLabel</span> <span class="n">label</span> <span class="o">=</span> <span class="k">new</span> <span class="n">JLabel</span><span class="o">(&amp;</span><span class="n">amp</span><span class="o">;</span><span class="n">amp</span><span class="o">;</span><span class="n">amp</span><span class="o">;</span><span class="n">quot</span><span class="o">;</span><span class="n">Hello</span> <span class="n">Kitty</span> <span class="o">!&amp;</span><span class="n">amp</span><span class="o">;</span><span class="n">amp</span><span class="o">;</span><span class="n">amp</span><span class="o">;</span><span class="n">quot</span><span class="o">;);</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">//We write in BIG LETTERS, the farthest it&#39;s seen the better!</span>
</span><span class='line'>    <span class="n">label</span><span class="o">.</span><span class="na">setFont</span><span class="o">(</span><span class="k">new</span> <span class="n">Font</span><span class="o">(&amp;</span><span class="n">amp</span><span class="o">;</span><span class="n">amp</span><span class="o">;</span><span class="n">amp</span><span class="o">;</span><span class="n">quot</span><span class="o">;</span><span class="n">Arial</span><span class="o">&amp;</span><span class="n">amp</span><span class="o">;</span><span class="n">amp</span><span class="o">;</span><span class="n">amp</span><span class="o">;</span><span class="n">quot</span><span class="o">;,</span><span class="n">Font</span><span class="o">.</span><span class="na">BOLD</span><span class="o">,</span> <span class="mi">20</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">this</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">main</span><span class="o">);</span> <span class="n">main</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">label</span><span class="o">);</span> <span class="k">this</span><span class="o">.</span><span class="na">setVisible</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span> <span class="n">pack</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">//We instanciate the Timer Timer timer = new Timer();</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">//And then we launch the fade-out, waiting 500ms before starting</span>
</span><span class='line'>    <span class="c1">//Then we gradually fade out every 5ms</span>
</span><span class='line'>    <span class="n">timer</span><span class="o">.</span><span class="na">schedule</span><span class="o">(</span><span class="k">new</span> <span class="n">Fader</span><span class="o">(</span><span class="k">this</span><span class="o">),</span><span class="mi">500</span><span class="o">,</span> <span class="mi">5</span><span class="o">);</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>For testing you can use a call like that:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="k">new</span> <span class="nf">Splash</span><span class="o">();</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Enjoy your Swing ;-)</p>
]]></content>
  </entry>
  
</feed>
