<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: htpc | Tym-Project]]></title>
  <link href="http://blog.tym-project.fr/blog/categories/htpc/atom.xml" rel="self"/>
  <link href="http://blog.tym-project.fr/"/>
  <updated>2014-06-22T16:21:03+00:00</updated>
  <id>http://blog.tym-project.fr/</id>
  <author>
    <name><![CDATA[Tym]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Xbmc : un script pour déclencher la mise à jour de la librairie]]></title>
    <link href="http://blog.tym-project.fr/2011/01/12/xbmc-un-script-pour-declencher-la-mise-a-jour-de-la-librairie/"/>
    <updated>2011-01-12T12:00:16+00:00</updated>
    <id>http://blog.tym-project.fr/2011/01/12/xbmc-un-script-pour-declencher-la-mise-a-jour-de-la-librairie</id>
    <content type="html"><![CDATA[<p>Xbmc possède des scrapers très puissants, ce qui
permet d'avoir une librairie enrichie d'images et autre bonus venant du web.
Par défaut il existe deux moyens de mettre à jour la librairie : au démarrage
de l'application ou manuellement. Pourquoi pas, mais quid d'un média center
qui reste allumé longtemps (et donc Xbmc qui ne redémarre pas) ?</p>

<!-- more -->


<p>Grâce à
<a href="http://wiki.xbmc.org/index.php?title=JSON_RPC">l'API Json de Xbmc</a> il est possible de déclencher cette mise à jour via un
script. <em>Pensez bien à activer l'interface web de Xbmc au préalable !</em><br/>
En
Python voici ce que cela donne pour la librairie vidéo :
{% codeblock lang:python %}</p>

<h1>!/usr/bin/python</h1>

<p>import urllib2</p>

<p>req = urllib2.Request("http://127.0.0.1:8090/jsonrpc")
req.method = 'POST'
req.content_type = 'application/json'</p>

<p>data='{"jsonrpc": "2.0", "method": "VideoLibrary.ScanForContent", "id": 1}'</p>

<p>urllib2.urlopen(req, data)
{% endcodeblock %}</p>

<p><em>Edit du 24/12/2011 - Voici aussi la version compatible python 3 :</em><br/>
{% codeblock lang:python %}</p>

<h1>!/usr/bin/python3.2</h1>

<p>import urllib.request</p>

<p>req = urllib.request.Request("http://127.0.0.1:8090/jsonrpc")
req.method = 'POST'
req.content_type = 'application/json'
data=b'{"jsonrpc": "2.0", "method": "VideoLibrary.ScanForContent", "id": 1}'
urllib.request.urlopen(req, data)
{% endcodeblock %}</p>

<p>Bien entendu cela fonctionne aussi avec la
musique :</p>

<pre><code>data='{"jsonrpc": "2.0","method": "AudioLibrary.ScanForContent", "id": 1}'
</code></pre>

<p>Ensuite il vous
suffit d'appeler ce script depuis un <code>crontab</code>, ou pourquoi pas depuis
<a href="http://sabnzbd.org/">SABnzbd</a> ?</p>

<p>Bon scrapping ;-)</p>
]]></content>
  </entry>
  
</feed>
