<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Bash | Tym-Project]]></title>
  <link href="http://blog.tym-project.fr/blog/categories/bash/atom.xml" rel="self"/>
  <link href="http://blog.tym-project.fr/"/>
  <updated>2014-07-23T17:52:48+00:00</updated>
  <id>http://blog.tym-project.fr/</id>
  <author>
    <name><![CDATA[Tym]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Ma nouvelle configuration Media Center sous Linux]]></title>
    <link href="http://blog.tym-project.fr/2011/08/21/xbmc-et-archlinux-pour-un-media-center/"/>
    <updated>2011-08-21T12:00:02+00:00</updated>
    <id>http://blog.tym-project.fr/2011/08/21/xbmc-et-archlinux-pour-un-media-center</id>
    <content type="html"><![CDATA[<p>J'avais déjà évoqué dans un précédent article que
je possède un Media center sous Linux. Suite à une petite bidouille
malheureuse, il s'est retrouvé complètement planté. J'ai donc décidé de tout
réinstaller à partir de zéro et de documenter (un peu) l'opération.<br/>
Je vais
donc détailler les principaux composants de cette installation, sans pour
autant rentrer dans les détails (utilisez les commentaires si besoin).</p>

<!-- more -->


<h2>Qui suis-je, où vais-je, ...</h2>

<p><em>... dans quelle étagère ?</em> Avant de mettre les mains dans la console, une
petite explication de l'utilisation que je fais de ma machine s'impose :</p>

<ul>
<li>Je passe beaucoup de temps sur <a href="http://xbmc.org/skins/" title="Xbmc">Xbmc</a>, un très bon logiciel de Media Center</li>
<li>Je regarde aussi beaucoup Nolife Online (<a href="http://www.nolife-tv.com/souscription" title="Nolife Online">Abonnez vous !</a>)</li>
<li>Je n'exclue pas l'idée d'utiliser d'autres services de TV de rattrapage comme M6 Replay par exemple.</li>
</ul>


<p>Je possède un clavier sans-fil avec Trackball intégré (<a href="http://www.materiel.net/clavier/enermax-aurora-micro-wireless-kb008w-b-noir-47221.html" title="Clavier Aurora Enermax">celui-ci</a>) ainsi
qu'une télécommande "compatible Windows Media Center" achetée sur e-bay.</p>

<h2>Arch' mon ami !</h2>

<p>Archlinux m'a semblé être le meilleur choix comme distribution pour Mediator
(le nom que j'ai donné à cette machine...bien avant le scandale sur le
médicament du même nom). Outre sa flexibilité, j'apprécie surtout le fait
d'avoir des paquetages très récents...très utile pour les drivers vidéo par
exemple. C'est aussi une distribution pour laquelle l'installation de base est
très légère, sans fioritures. <em>Oui, je pense à Ubuntu en disant cela :)</em> J'ai
donc réalisé une installation tout à fait classique, j'ai seulement eu un
petit souci avec la configuration de Grub pour le kernel 3.0 qui fera l'objet
d'un prochain (court) article.</p>

<h2>Boot --> Bureau</h2>

<p>Pour me simplifier un peu la vie j'ai décidé d'utiliser un gestionnaire de
login. L'heureux élu est "bien entendu" Slim, pour sa légèreté et sa facilité
de configuration. L'utilisateur principal autre que root est <code>server</code>, et j'ai
donc configuré le login automatique de ce dernier via Slim (dans le fichier
<code>/etc/slim.conf</code>) :</p>

<pre><code>default_user server
auto_login yes
</code></pre>

<h2>Gère moi cette fenêtre !</h2>

<p>Mon choix pour le Window Manager s'est porté, pour les mêmes raisons que Slim,
vers PekWM. La configuration générale que j'utilise pour ce dernier est assez
simple, j'ai seulement désactivé les bureaux virtuels et changé le thème. En
ce qui concerne les raccourcis clavier, voici un extrait de mon fichier
<code>~/.pekwm/keys</code> :</p>

<pre><code>Global {
    KeyPress = "XF86AudioLowerVolume" { Actions = "Exec /home/server/scripts/bash_vol_manager.sh lower 5 &amp;" }
    KeyPress = "XF86AudioRaiseVolume" { Actions = "Exec /home/server/scripts/bash_vol_manager.sh raise 5 &amp;" }
    KeyPress = "XF86AudioMute" { Actions = "Exec /home/server/scripts/bash_vol_manager.sh toggle &amp;" }
    KeyPress = "XF86Mail" { Actions = "Exec /home/server/scripts/xbmc.sh &amp;" }
    KeyPress = "Alt Mod4 Alt_L" { Actions = "Exec /home/server/scripts/xbmc.sh &amp;"}
    KeyPress = "XF86Sleep" { Action = "Exec /home/server/scripts/stop.sh &amp;" }
...
</code></pre>

<p>J'ai donc la gestion du volume avec un petit script maison (que je
détaillerais dans un autre post), l'ouverture de Xbmc (via les boutons
multimédia "Mail" de mon clavier et le bouton "Start" de ma télécommande).
Enfin la touche "Power" de ma télécommande (qui envoie le signal <code>XF86Sleep</code>)
pour éteindre la machine.<br/>
<em>Le dernier raccourci ne fonctionne pas...et
j'ignore pourquoi (ce n'est pas lié au script associé). Je suis preneur de vos
suggestions !</em></p>

<p>Le script <code>~/.pekwm/start</code> contient les lignes suivantes :</p>

<pre><code>#!/bin/sh
firefox &amp;
sleep 3
/home/server/scripts/xbmc.sh &amp;
</code></pre>

<p>Le temps de pause entre le lancement de Firefox et celui de Xbmc
permet d'éviter que ce dernier perde le plein écran à cause du précédent.</p>

<h2>Trop fort !</h2>

<p>Avec mon installation précédente je devais souvent jongler avec le volume
entre une vidéo sur Firefox et un média quelconque sur Xbmc. Le volume doit
être poussé au maximum sur Xbmc, mais à environ 70% sur Firefox, pour entendre
correctement dans mon salon.<br/>
J'ai donc réfléchi à un moyen d'automatiser ce
changement de volume, et cela s'est traduit par le script <code>xbmc.sh</code> :</p>

<pre><code>#!/bin/bash
amixer -c 0 sset Master 100%
xbmc
amixer -c 0 sset Master 68%
</code></pre>

<p>Simple mais efficace, il pousse le volume
à fond puis lance Xbmc. Ce dernier n'étant pas lancé en arrière plan, dès
qu'il est quitté le volume est placé à 68%. Ce script est utilisé à la fois
dans <code>~/.pekwm/start</code> et <code>~/.pekwm/keys</code>.</p>

<h2>Firefox (à la loupe, sans la loupe)</h2>

<p>J'ai abandonné <a href="http://www.tym-project.fr/blog/2011/05/utiliser-la-loupe-sous-linux-pour-un-pc-de-salon/" title="Un Linux mediacenter avec une loupe">mon système de loupe</a> pour quelque chose de plus simple :
pousser à fond la taille des caractères à l'écran (<code>Preferences&gt;Content&gt;Fonts
&amp; Colors&gt;Advances&gt;Maximum font size</code>). C'est moche mais pratique, l'avenir me
dira si c'est réellement une bonne alternative. J'ai aussi modifié le
<code>about:config</code> pour désactiver la restauration des onglets au lancement (en
cas de crash ou non) :</p>

<pre><code>browser.sessionstore.resume_from_crash;false
browser.sessionstore.max_tabs_undo;0
browser.sessionstore.max_windows_undo;0
</code></pre>

<h2>shutdown -s -t now</h2>

<p>Si il est toujours possible d'autoriser la mise hors tension du système via
des bidouilles avec <code>sudo</code> et <code>halt</code>, cela reste des bidouilles. La manière la
plus simple est en fait d'utiliser <code>consolekit</code>, <code>policykit</code> et <code>dbus</code>... en
effet : c'est prévu pour.<br/>
Avant tout il faut modifier <code>~/.xinitrc</code> ainsi :</p>

<pre><code>#exec pekwm
exec ck-launch-session pekwm
</code></pre>

<p>Pour tester si vous avez les droits pour couper le système (par
exemple), utilisez cette commande qui vous renverra <code>true</code> ou <code>false</code> :</p>

<pre><code>dbus-send --system --print-reply --dest="org.freedesktop.ConsoleKit" /org/freedesktop/ConsoleKit/Manager org.freedesktop.ConsoleKit.Manager.CanStop
</code></pre>

<p>La commande à utiliser
pour éteindre la machine sera alors la suivante (une simple modification de la
dernière directive) :</p>

<pre><code>dbus-send --system --print-reply --dest="org.freedesktop.ConsoleKit" /org/freedesktop/ConsoleKit/Manager org.freedesktop.ConsoleKit.Manager.Stop
</code></pre>

<p>Si jamais vous n'avez pas les droits, ou êtes simplement curieux, la
configuration se situe dans le fichier
<code>/usr/share/polkit-1/actions/org.freedesktop.consolekit.policy</code>. Une commande
est autorisée par la directive <code>&lt;allow_active&gt;yes&lt;/allow_active&gt;</code>, mais j'ai
parfois dû utiliser <code>&lt;allow_any&gt;yes&lt;/allow_any&gt;</code></p>

<h2>"Moi vivant, vous n'aurez jamais de pauses"</h2>

<p>Par défaut le serveur X coupe l'écran au bout d'un temps donné pour économiser
de l'énergie. Cela va sans dire que c'est insupportable pour un écran qui est
censé être allumé en permanence avec la machine... Une petite configuration
dans <code>/etc/X11/xorg.conf</code> et hop !</p>

<pre><code>Section "ServerFlags"
    Option "BlankTime" "0"
    Option "StandbyTime" "0"
    Option "SuspendTime" "0"
    Option "OffTime" "0"
EndSection
</code></pre>

<h2>Sources</h2>

<ul>
<li><a href="https://wiki.archlinux.org/index.php/PekWM" title="PekWM">PekWM</a></li>
<li><a href="https://wiki.archlinux.org/index.php/Slim" title="Slim">Slim</a></li>
<li><a href="https://wiki.archlinux.org/index.php/ConsoleKit" title="ConsoleKit">ConsoleKit</a></li>
<li><a href="http://www.shallowsky.com/linux/x-screen-blanking.html" title="X11 Scrren Blanking">Mise en veille de l'écran avec X11</a></li>
<li><a href="http://vuedelaprovince.canalblog.com/" title="La citation &quot;Moi vivant ...&quot;">La citation "Moi vivant..."</a></li>
</ul>


<p>Bonne utilisation ;-)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Un Linux mediacenter avec une loupe]]></title>
    <link href="http://blog.tym-project.fr/2011/05/04/utiliser-la-loupe-sous-linux-pour-un-pc-de-salon/"/>
    <updated>2011-05-04T12:00:06+00:00</updated>
    <id>http://blog.tym-project.fr/2011/05/04/utiliser-la-loupe-sous-linux-pour-un-pc-de-salon</id>
    <content type="html"><![CDATA[<p>Un Linux avec Xbmc au milieu du salon c'est de plus
en plus en commun, et même si je me trompe, c'est quand même super pratique !
Mais c'est encore mieux quand cette machine peut aussi servir à consulter ses
mails, utiliser Youtube... Problème : la résolution d'écran est trop elevée
pour pouvoir lire à 2m de l'écran. C'est donc là qu'entre en jeu la loupe.</p>

<!-- more -->


<p>Gnome propose son outil, gnome-magnifier, tout un tas d'infos <a href="https://wiki.ubuntu.com/Accessibility/Reviews/gnome-mag">sur le Wiki
d'Ubuntu</a> et <a href="http://man.cx/magnifier">et dans le man</a>.</p>

<h2>De la problèmatique des doigts</h2>

<p>Avoir une loupe c'est une chose, y accéder en est une autre. En effet, la
problématique est toujours la même si il faut aller cliquer dans un petit menu
ou sur une petit icône, sans parler de lancer une ligne de commande ! Allons-y
gaiement avec un raccourci clavier donc... Avec Gnome (2.XX) rien de plus
simple : <code>Système/Préférences/Raccourcis clavier</code>,la commande étant <code>magnifier
-m -v</code>. L'option <code>-m</code> pour suivre les mouvements de la souris, <code>-v</code> pour une
loupe verticale (sur la gauche de l'écran par défaut), eh lisez le <code>man</code> !</p>

<h2>De la problématique du multi-doigt</h2>

<p>Un raccourci pour ouvrir la loupe c'est pratique, mais comment faire pour
fermer l'outil ? Un autre raccourci ? Non non non, un peu d'ingéniosité que
diable ! C'est en fait un seul et même raccourci clavier qui va servir, en
séquence, à :</p>

<ol>
<li>Lancer la loupe en "vertical"</li>
<li>Basculer la loupe en "horizontal", pratique pour la lecture de long textes</li>
<li>Fermer complètement l'application</li>
</ol>


<p>En terme de script (Bash, pour faire vite et bien), cela donne ceci de la
manière suivante :
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;!/bin/bash&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;function killmag <span class="o">{</span>&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;pre&gt;&lt;code&gt;kill -9 <span class="se">\ </span><span class="sb">`</span>ps aux | grep -v grep | grep magnifier | tr -s <span class="s2">&quot; &quot;</span> | cut -d <span class="s2">&quot; &quot;</span> -f 2<span class="sb">`</span>
</span><span class='line'>&lt;/code&gt;&lt;/pre&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;<span class="o">}</span>
</span><span class='line'><span class="k">case</span> <span class="se">\</span>
</span><span class='line'><span class="s2">&quot;&lt;code&gt;ps aux | grep -v grep | grep magnifier | \ tr -s &quot;</span> <span class="s2">&quot; | cut -d &quot;</span> <span class="s2">&quot; -f 12&lt;/code&gt;&quot;</span><span class="se">\</span>
</span><span class='line'>in&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;pre&gt;&lt;code&gt;<span class="s2">&quot;-v&quot;</span><span class="o">)</span>
</span><span class='line'>    killmag &amp;amp;&amp;amp; magnifier -h -m
</span><span class='line'>    ;;
</span><span class='line'><span class="s2">&quot;-h&quot;</span><span class="o">)</span>
</span><span class='line'>    killmag
</span><span class='line'>    ;;
</span><span class='line'><span class="s2">&quot;&quot;</span><span class="o">)</span>
</span><span class='line'>    magnifier -v -m
</span><span class='line'>    ;;
</span><span class='line'>&lt;/code&gt;&lt;/pre&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;esac
</span></code></pre></td></tr></table></div></figure></notextile></div>
On retrouve donc une fonction pour killer la loupe, car il faut la relancer
pour changer d'orientation. Petit détail syntaxique : l'utilisation de <code>\</code>
pour faire des retours à la ligne au milieu d'une commande, pratique pour se
la raconter un peu sur un article de blog (ou faciliter la lecture, c'est
selon).</p>

<h2>Algo à gogo</h2>

<p>D'un point de vue algorithmique, et par ordre de déclenchement du script :</p>

<ol>
<li>Par défaut la loupe n'est pas lancée, donc le résultat du <code>grep</code> dans le <code>case</code> est vide : on lance la loupe en mode vertical</li>
<li>Un second passage va renvoyer "<code>-v</code>" dans le <code>case</code> : on kill la loupe et on la relance en horizontal</li>
<li>Le passage suivant renvoit "<code>-h</code>", donc le <code>case</code> kill la loupe pour de bon</li>
<li>Et ainsi fon fon fon...</li>
</ol>


<p>Bon zoom ;-)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Mon script de configuration iptables]]></title>
    <link href="http://blog.tym-project.fr/2011/04/06/iptables-et-lancement-automatique/"/>
    <updated>2011-04-06T12:00:02+00:00</updated>
    <id>http://blog.tym-project.fr/2011/04/06/iptables-et-lancement-automatique</id>
    <content type="html"><![CDATA[<p>Pour ceux qui ne connaitraient pas, iptables est une
interface de gestion du module netfilter du noyau Linux. En termes clairs :
c'est un pare-feu. Iptables est donc un ensemble de commandes permettant de
créer des règles, je ne vais pas rentrer dans les détails, vous trouverez plus
d'infos sur <a href="http://www.techrepublic.com/blog/10things/10-iptables-rules-to-help-secure-your-linux-box/539">cette page par exemple</a>. Dans cet article il sera question de
comment je gère ma configuration de pare-feu à travers un script d'init.</p>

<!-- more -->


<h2>init.d, t'es initié ?</h2>

<p>Le but de ce script est qu'il se lance au démarrage de mon poste, et en bonus
que je puisse couper/relancer mon pare-feu à loisir : c'est là le rôle d'un
script "init.d". Commençons donc par la fin, avec les différents arguments que
peut prendre le script :
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="k">case</span> <span class="nv">$1</span> in&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;pre&gt;&lt;code&gt;start<span class="o">)</span>
</span><span class='line'>    start
</span><span class='line'>    ;;
</span><span class='line'>stop<span class="o">)</span>
</span><span class='line'>    stop
</span><span class='line'>    ;;
</span><span class='line'>restart<span class="o">)</span>
</span><span class='line'>    restart
</span><span class='line'>    ;;
</span><span class='line'>*<span class="o">)</span>
</span><span class='line'>    <span class="nb">echo</span> <span class="s2">&quot;usage: iptables {start|stop|restart}&quot;</span>
</span><span class='line'>    <span class="nb">exit </span>1
</span><span class='line'>    ;;
</span><span class='line'>&lt;/code&gt;&lt;/pre&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;esac
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Logiquement on retrouve les
fonction <code>start</code>, <code>stop</code> et <code>restart</code> avec une explication des arguments pour
toute valeur en dehors de ce choix.</p>

<h2>En fonction des fonctions...</h2>

<p>la fonction <code>restart</code> est très simple :</p>

<pre><code>function restart {
    stop start
}
</code></pre>

<p>la fonction <code>stop</code> est un peu plus complexe et est chargée de vider les règles
iptable, de changer la politique par défaut et de restarter
<code>[man]fail2ban[/man]</code> si besoin :
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="k">function </span>stop <span class="o">{</span>&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;pre&gt;&lt;code&gt;for IPTABLES in iptables ip6tables;do
</span><span class='line'>    <span class="nv">$IPTABLES</span> -P INPUT ACCEPT
</span><span class='line'>    <span class="nv">$IPTABLES</span> -P FORWARD ACCEPT
</span><span class='line'>    <span class="nv">$IPTABLES</span> -P OUTPUT ACCEPT
</span><span class='line'>    <span class="nv">$IPTABLES</span> -F <span class="nv">$IPTABLES</span> -X
</span><span class='line'><span class="k">done</span>
</span><span class='line'>
</span><span class='line'><span class="k">if</span> <span class="o">[</span> -e /etc/init.d/fail2ban <span class="o">]</span>; <span class="k">then</span>
</span><span class='line'>    /etc/init.d/fail2ban restart
</span><span class='line'><span class="k">fi</span>
</span><span class='line'>&lt;/code&gt;&lt;/pre&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;<span class="o">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
L'utilisation de <code>for IPTABLES in iptables ip6tables</code> permet de configurer à
la fois pour ipv4 et ipv6.</p>

<p>La fonction <code>start</code> utilise une variable <code>$TCP_PORTS</code> (qui contient les port
TCP à ouvrir) définie ainsi :</p>

<pre><code>TCP_PORTS="80 443"
</code></pre>

<p>Et la fonction en elle-même :
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="k">function </span>start <span class="o">{</span>&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;pre&gt;&lt;code&gt;for IPTABLES in iptables ip6tables;do
</span><span class='line'>    <span class="nv">$IPTABLES</span> -F <span class="nv">$IPTABLES</span> -P INPUT DROP
</span><span class='line'>    <span class="nv">$IPTABLES</span> -P FORWARD DROP
</span><span class='line'>    <span class="nv">$IPTABLES</span> -P OUTPUT DROP
</span><span class='line'>
</span><span class='line'>    <span class="nv">$IPTABLES</span> -A INPUT -m state --state RELATED,ESTABLISHED -j ACCEPT
</span><span class='line'>    <span class="k">for </span>port in <span class="nv">$TCP_PORTS</span>;<span class="k">do</span>
</span><span class='line'>        <span class="nv">$IPTABLES</span> -A INPUT -p tcp --dport <span class="nv">$port</span> -j ACCEPT
</span><span class='line'>    <span class="k">done</span>
</span><span class='line'>
</span><span class='line'>    <span class="nv">$IPTABLES</span> -A OUTPUT -m state --state NEW,RELATED,ESTABLISHED -j ACCEPT
</span><span class='line'>    <span class="nv">$IPTABLES</span> -A INPUT -i lo -j ACCEPT <span class="nv">$IPTABLES</span> -A OUTPUT -o lo -j ACCEPT
</span><span class='line'>    <span class="c"># ICMP (Ping)</span>
</span><span class='line'>    <span class="c">#$IPTABLES -A INPUT -p icmp -j ACCEPT</span>
</span><span class='line'><span class="k">done</span>
</span><span class='line'>&lt;/code&gt;&lt;/pre&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;if <span class="o">[</span> -e /etc/init.d/fail2ban <span class="o">]</span>;<span class="k">then</span>&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;pre&gt;&lt;code&gt;/etc/init.d/fail2ban restart
</span><span class='line'>&lt;/code&gt;&lt;/pre&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;fi
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h2>Configuration et installation</h2>

<p>Pour placer le script dans <code>/etc/init.d/</code> deux solutions sont possibles :</p>

<ul>
<li>le copier dans le répertoire</li>
<li>faire un lien symbolique avec <code>ln -s /emplacement/script/iptables /etc/init.d/iptables</code></li>
</ul>


<p>Si vous mettez ce script en place sur serveur sans accès physique, je vous
conseille formetment de le tester avant de le mettre au démarrage de la
machine...c'est trop bête de se faire enfermer dehors :)</p>

<p>La mise en place du scritpt au démarrage peut se faire manuellement en mettant
en place des liens symboliques dans <code>/etc/rc*.d/</code>, mais il est plus simple de
passer par <code>update-rc.d</code> :</p>

<pre><code>sudo update-rc.d iptables defaults
update-rc.d: warning: /etc/init.d/iptables missing LSB information
update-rc.d: see &lt;http://wiki.debian.org/LSBInitScripts&gt;
</code></pre>

<p>Suite aux erreurs du <code>LSB</code> j'ai ajouté cela au début du script :</p>

<pre><code>### BEGIN INIT INFO
# Provides: iptables
# Required-Start: $local_fs $remote_fs $network $syslog
# Required-Stop: $local_fs $remote_fs $network $syslog
# Default-Start: 2 3 4 5
# Default-Stop: 0 1 6
# Short-Description: Set up iptables at boot time
# Description: Enable service provided by iptables.
### END INIT INFO
</code></pre>

<p>Voici donc le fichier dans son intégralité :
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;!/bin/bash&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;iptables-default&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;www.tym-project.fr/blog&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;tym@tym-project.fr&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;h3&gt;BEGIN INIT INFO&lt;/h3&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;Provides:          iptables&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;Required-Start:    <span class="nv">$local_fs</span> <span class="nv">$remote_fs</span> <span class="nv">$network</span> <span class="nv">$syslog</span>&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;Required-Stop:     <span class="nv">$local_fs</span> <span class="nv">$remote_fs</span> <span class="nv">$network</span> <span class="nv">$syslog</span>&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;Default-Start:     2 3 4 5&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;Default-Stop:      0 1 6&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;Short-Description: Set up iptables at boot <span class="nb">time</span>&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;Description:       Enable service provided by iptables.&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;h3&gt;END INIT INFO&lt;/h3&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;PATH<span class="o">=</span><span class="s2">&quot;/sbin&quot;</span>
</span><span class='line'><span class="nv">TCP_PORTS</span><span class="o">=</span><span class="s2">&quot;80 443&quot;</span>
</span><span class='line'><span class="k">function </span>stop <span class="o">{</span>&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;pre&gt;&lt;code&gt;for IPTABLES in iptables ip6tables;do
</span><span class='line'>    <span class="nv">$IPTABLES</span> -P INPUT ACCEPT
</span><span class='line'>    <span class="nv">$IPTABLES</span> -P FORWARD ACCEPT
</span><span class='line'>    <span class="nv">$IPTABLES</span> -P OUTPUT ACCEPT
</span><span class='line'>    <span class="nv">$IPTABLES</span> -F
</span><span class='line'>    <span class="nv">$IPTABLES</span> -X
</span><span class='line'><span class="k">done</span>
</span><span class='line'><span class="k">if</span> <span class="o">[</span> -e /etc/init.d/fail2ban <span class="o">]</span>; <span class="k">then</span>
</span><span class='line'>    /etc/init.d/fail2ban restart
</span><span class='line'><span class="k">fi</span>
</span><span class='line'>&lt;/code&gt;&lt;/pre&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;<span class="o">}</span>
</span><span class='line'><span class="k">function </span>start <span class="o">{</span>&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;pre&gt;&lt;code&gt;for IPTABLES in iptables ip6tables;do
</span><span class='line'>    <span class="nv">$IPTABLES</span> -F
</span><span class='line'>    <span class="nv">$IPTABLES</span> -P INPUT DROP
</span><span class='line'>    <span class="nv">$IPTABLES</span> -P FORWARD DROP
</span><span class='line'>    <span class="nv">$IPTABLES</span> -P OUTPUT DROP
</span><span class='line'>    <span class="nv">$IPTABLES</span> -A INPUT -m state --state RELATED,ESTABLISHED -j ACCEPT
</span><span class='line'><span class="k">for </span>port in <span class="nv">$TCP_PORTS</span>;<span class="k">do</span>
</span><span class='line'>    <span class="nv">$IPTABLES</span> -A INPUT -p tcp --dport <span class="nv">$port</span> -j ACCEPT
</span><span class='line'><span class="k">done</span>
</span><span class='line'><span class="nv">$IPTABLES</span> -A OUTPUT -m state --state NEW,RELATED,ESTABLISHED -j ACCEPT
</span><span class='line'><span class="nv">$IPTABLES</span> -A INPUT -i lo -j ACCEPT
</span><span class='line'><span class="nv">$IPTABLES</span> -A OUTPUT -o lo -j ACCEPT
</span><span class='line'><span class="c"># ICMP (Ping)</span>
</span><span class='line'><span class="c">#$IPTABLES -A INPUT -p icmp -j ACCEPT</span>
</span><span class='line'><span class="k">done</span>
</span><span class='line'><span class="k">if</span> <span class="o">[</span> -e /etc/init.d/fail2ban <span class="o">]</span>;<span class="k">then</span>
</span><span class='line'>    /etc/init.d/fail2ban restart
</span><span class='line'><span class="k">fi</span>
</span><span class='line'>&lt;/code&gt;&lt;/pre&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;<span class="o">}</span>
</span><span class='line'><span class="k">function </span>restart <span class="o">{</span>&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;pre&gt;&lt;code&gt;stop
</span><span class='line'>start
</span><span class='line'>&lt;/code&gt;&lt;/pre&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;<span class="o">}</span>
</span><span class='line'><span class="k">case</span> <span class="nv">$1</span> in&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;pre&gt;&lt;code&gt;start<span class="o">)</span>
</span><span class='line'>start
</span><span class='line'>;;
</span><span class='line'>stop<span class="o">)</span>
</span><span class='line'>stop
</span><span class='line'>;;
</span><span class='line'>restart<span class="o">)</span>
</span><span class='line'>restart
</span><span class='line'>;;
</span><span class='line'>*<span class="o">)</span>
</span><span class='line'><span class="nb">echo</span> <span class="s2">&quot;usage: iptables {start|stop|restart}&quot;</span>
</span><span class='line'><span class="nb">exit </span>1
</span><span class='line'>;;
</span><span class='line'>&lt;/code&gt;&lt;/pre&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;esac
</span></code></pre></td></tr></table></div></figure></notextile></div>
Bon firewalling ;-)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[SED : les astuces à connaître]]></title>
    <link href="http://blog.tym-project.fr/2011/02/16/sed-les-astuces-a-connaitre/"/>
    <updated>2011-02-16T12:00:37+00:00</updated>
    <id>http://blog.tym-project.fr/2011/02/16/sed-les-astuces-a-connaitre</id>
    <content type="html"><![CDATA[<p><code>[man]Sed[/man]</code> pour ceux qui ne connaîtrait pas
encore, est un éditeur de texte en ligne de commande. Concrètement il va
éditer un fichier (ou l'entrée standard, via un pipe) et le modifier vers la
sortie standard. Rien de moins complexe ! Enfin c'est seulement la définition,
car l'outil en lui même peut rapidement devenir très très très riche...<br/>
J'ai
donc compilé dans cet article un ensemble d'astuces à connaître pour bien
utiliser <code>sed</code>.</p>

<!-- more -->


<p>Je l'utilise essentiellement pour faire des remplacement :</p>

<pre><code>tym@tym-laptop:~$ cat quote.txt
Remember, a Jedi can feel the Force flowing through him.
tym@tym-laptop:~$ sed 's/Jedi/---DUDE WITH A LAMP IN A SOCKET---/g' quote.txt
Remember, a ---DUDE WITH A LAMP IN A SOCKET--- can feel the Force flowing through him.
</code></pre>

<p>Voila pour l'exemple, cherchez bien... il-y-a une vanne
cachée dans ce texte. Oh et bien entendu <code>sed</code> utilise des expressions
régulières !</p>

<h2>Mise en mémoire</h2>

<p>Pour réutiliser l'expression que vous voulez modifier vous avez deux
solutions.Avec "<code>&amp;</code>" qui représente l'ensemble de la chaîne trouvée :</p>

<pre><code>tym@tym-laptop:~$ sed 's/Jedi/&amp; (A DUDE WITH A LAMP IN A SOCKET)/g' quote.txt
Remember, a Jedi (A DUDE WITH A LAMP IN A SOCKET) can feel the Force flowing through him.
</code></pre>

<p>Avec des parenthèses,
puis <code>\n</code> pour rappeler l'expression :</p>

<pre><code>tym@tym-laptop:~$ sed 's/\(Je\)\(di\)/\1u\2 (ou Vendredi)/g' quote.txt
Remember, a Jeudi (ou Vendredi) can feel the Force flowing through him.
</code></pre>

<p>Notez
l'utilisation de "\" pour protéger les parenthèses, sans quoi elles seraient
considérées comme faisant partie de la chaîne à rechercher.</p>

<h2>Trop de slash...</h2>

<p>L'exemple précédent contient un sacré nombre de "/" et de "\", ne rendant pas
la lisibilité de l'expression aisée ! Soyez rassuré, vous avez le choix des
délimiteurs :</p>

<ul>
<li>"_" : <code>sed 's_\(Je\)\(di\)_\1u\2 (ou Vendredi)_g' quote.txt</code></li>
<li>":" : <code>sed 's:\(Je\)\(di\):\1u\2 (ou Vendredi):g' quote.txt</code></li>
<li>"|" : <code>sed 's|\(Je\)\(di\)|\1u\2 (ou Vendredi)|g' quote.txt</code></li>
</ul>


<h2>Une bonne fois pour toute !</h2>

<p>Par défaut <code>sed</code> donne le résultat de la commande dans la sortie standard, il
est donc assez simple de créer un nouveau fichier contenant les modifications
:</p>

<pre><code>tym@tym-laptop:~$ sed 's/Jedi/DUDE WITH A LAMP IN A SOCKET/g' quote.txt &gt; quote_funny.txt
</code></pre>

<p>Mais pour réécrire dans le même fichier il faut utiliser l'option <code>-i</code>
("interactive"), une redirection du type <code>sed .... quote.txt &gt; quote.txt</code> ne
donnerait qu'un fichier vide :</p>

<pre><code>sed -i 's/Jedi/---DUDE WITH A LAMP IN A SOCKET---/g' quote.txt
</code></pre>

<p>Bon matching ;-)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Installation de ss5 sur une Debian 5]]></title>
    <link href="http://blog.tym-project.fr/2011/02/09/install-ss5-debian-et-script-init/"/>
    <updated>2011-02-09T12:00:48+00:00</updated>
    <id>http://blog.tym-project.fr/2011/02/09/install-ss5-debian-et-script-init</id>
    <content type="html"><![CDATA[<p><a href="http://ss5.sourceforge.net/">ss5</a> est un service de proxy SOCKS très
performant, développé par <a href="http://ss5.sourceforge.net/author.htm">une seule personne</a> je tiens à le souligner !
J'ai eu à l'installer sur une Debian 5, et j'ai donc réalisé un petit script
pour automatiser tout cela.</p>

<!-- more -->


<h2>On installe...</h2>

<p>N'oubliez pas de préciser le numéro de version complet dans la variable <code>VER</code>
:
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;!/bin/bash&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;VER<span class="o">=</span><span class="s2">&quot;3.8.4-1&quot;</span>
</span><span class='line'><span class="nv">DIR</span><span class="o">=</span><span class="s2">&quot;/tmp/ss5_install&quot;</span>
</span><span class='line'>apt-get update
</span><span class='line'>apt-get -y install build-essential libpam0g-dev libpam-devperm libldap2-dev libssl-dev&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;if ! <span class="o">[</span> -d <span class="s2">&quot;$DIR&quot;</span> <span class="o">]</span>;<span class="k">then </span>mkdir <span class="nv">$DIR</span> <span class="k">fi</span>
</span><span class='line'><span class="nb">cd</span> <span class="nv">$DIR</span> wget
</span><span class='line'>http://downloads.sourceforge.net/project/ss5/ss5/<span class="nv">$VER</span>/ss5-<span class="nv">$VER</span>.tar.gz&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;tar xzf ss5-<span class="nv">$VER</span>.tar.gz&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;VER<span class="o">=</span>&lt;code&gt;echo <span class="nv">$VER</span> | cut -d <span class="s2">&quot;-&quot;</span> -f 1&lt;/code&gt;&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;cd ss5-<span class="nv">$VER</span>&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;./configure --with-defaultport<span class="o">=</span>80 &amp;amp;&amp;amp; make clean &amp;amp;&amp;amp; make &amp;amp;&amp;amp; make install
</span></code></pre></td></tr></table></div></figure></notextile></div>
Une particularité du <code>.tar.gz</code> de <code>ss5</code> c'est de ne pas intégrer le
numéro de sous-version ("-2" par exemple) dans le nom du dossier, ce qui
oblige à cette pirouette dans le script :</p>

<pre><code>VER=`echo $VER | cut -d "-" -f 1`
</code></pre>

<h2>...et on démarre !</h2>

<p>J'ai aussi créé un script pour <code>init.d</code> (assez basique), basé sur
<code>/etc/init.d/skeleton</code>. Il intègre quelques options comme le port par défaut
ou le lancement en mode daemon (<code>DAEMON_ARGS="-t -u root -b 0.0.0.0:80"</code>) :
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
<span class='line-number'>124</span>
<span class='line-number'>125</span>
<span class='line-number'>126</span>
<span class='line-number'>127</span>
<span class='line-number'>128</span>
<span class='line-number'>129</span>
<span class='line-number'>130</span>
<span class='line-number'>131</span>
<span class='line-number'>132</span>
<span class='line-number'>133</span>
<span class='line-number'>134</span>
<span class='line-number'>135</span>
<span class='line-number'>136</span>
<span class='line-number'>137</span>
<span class='line-number'>138</span>
<span class='line-number'>139</span>
<span class='line-number'>140</span>
<span class='line-number'>141</span>
<span class='line-number'>142</span>
<span class='line-number'>143</span>
<span class='line-number'>144</span>
<span class='line-number'>145</span>
<span class='line-number'>146</span>
<span class='line-number'>147</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;! /bin/sh&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;h3&gt;BEGIN INIT INFO&lt;/h3&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;Provides:          ss5&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;Required-Start:    <span class="nv">$remote_fs</span>&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;Required-Stop:     <span class="nv">$remote_fs</span>&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;Default-Start:     2 3 4 5&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;Default-Stop:      0 1 6&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;Short-Description: Initscript <span class="k">for </span>ss5&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;Description:&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;h3&gt;END INIT INFO&lt;/h3&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;PATH should only include /usr/* <span class="k">if </span>it runs after the mountnfs.sh script&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;PATH<span class="o">=</span>/bin/:/usr/bin:/sbin:/usr/sbin
</span><span class='line'><span class="nv">DESC</span><span class="o">=</span><span class="s2">&quot;ss5 proxy server&quot;</span>
</span><span class='line'><span class="nv">NAME</span><span class="o">=</span>ss5
</span><span class='line'><span class="nv">DAEMON</span><span class="o">=</span>/usr/sbin/<span class="nv">$NAME</span>
</span><span class='line'><span class="nv">DAEMON_ARGS</span><span class="o">=</span><span class="s2">&quot;-t -u root -b 0.0.0.0:80&quot;</span>
</span><span class='line'><span class="nv">PIDFILE</span><span class="o">=</span>/var/run/<span class="nv">$NAME</span>.pid
</span><span class='line'><span class="nv">SCRIPTNAME</span><span class="o">=</span>/etc/init.d/<span class="nv">$NAME</span>&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;Exit <span class="k">if </span>the package is not installed&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;<span class="o">[</span> -x <span class="s2">&quot;$DAEMON&quot;</span> <span class="o">]</span> <span class="o">||</span> <span class="nb">exit </span>0&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;Load the VERBOSE setting and other rcS variables&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;. /lib/init/vars.sh&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;Define LSB log_* functions.&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;Depend on lsb-base <span class="o">(</span>&gt;<span class="o">=</span> 3.0-6<span class="o">)</span> to ensure that this file is present.&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;. /lib/lsb/init-functions
</span><span class='line'><span class="c">#&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;Function that starts the daemon/service&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;#
</span><span class='line'>do_start<span class="o">()</span>
</span><span class='line'><span class="o">{</span>&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;pre&gt;&lt;code&gt;# Return
</span><span class='line'><span class="c">#   0 if daemon has been started</span>
</span><span class='line'><span class="c">#   1 if daemon was already running</span>
</span><span class='line'><span class="c">#   2 if daemon could not be started</span>
</span><span class='line'>start-stop-daemon --start --quiet --pidfile <span class="nv">$PIDFILE</span> --exec <span class="nv">$DAEMON</span> --test &amp;gt; /dev/null <span class="se">\</span>
</span><span class='line'>    <span class="o">||</span> <span class="k">return </span>1
</span><span class='line'>start-stop-daemon --start --quiet --pidfile <span class="nv">$PIDFILE</span> --exec <span class="nv">$DAEMON</span> -- <span class="se">\</span>
</span><span class='line'>    <span class="nv">$DAEMON_ARGS</span> <span class="se">\</span>
</span><span class='line'>    <span class="o">||</span> <span class="k">return </span>2
</span><span class='line'>&lt;/code&gt;&lt;/pre&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;<span class="o">}</span>
</span><span class='line'><span class="c">#&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;Function that stops the daemon/service&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;#
</span><span class='line'>do_stop<span class="o">()</span>
</span><span class='line'><span class="o">{</span>&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;pre&gt;&lt;code&gt;# Return
</span><span class='line'><span class="c">#   0 if daemon has been stopped</span>
</span><span class='line'><span class="c">#   1 if daemon was already stopped</span>
</span><span class='line'><span class="c">#   2 if daemon could not be stopped</span>
</span><span class='line'><span class="c">#   other if a failure occurred</span>
</span><span class='line'>start-stop-daemon --stop --quiet --retry<span class="o">=</span>TERM/30/KILL/5 --pidfile <span class="nv">$PIDFILE</span> --name <span class="nv">$NAME</span>
</span><span class='line'><span class="nv">RETVAL</span><span class="o">=</span><span class="s2">&quot;$?&quot;</span>
</span><span class='line'><span class="o">[</span> <span class="s2">&quot;$RETVAL&quot;</span> <span class="o">=</span> 2 <span class="o">]</span> &amp;amp;&amp;amp; <span class="k">return </span>2
</span><span class='line'><span class="c"># Wait for children to finish too if this is a daemon that forks</span>
</span><span class='line'><span class="c"># and if the daemon is only ever run from this initscript.</span>
</span><span class='line'><span class="c"># If the above conditions are not satisfied then add some other code</span>
</span><span class='line'><span class="c"># that waits for the process to drop all resources that could be</span>
</span><span class='line'><span class="c"># needed by services started subsequently.  A last resort is to</span>
</span><span class='line'><span class="c"># sleep for some time.</span>
</span><span class='line'>start-stop-daemon --stop --quiet --oknodo --retry<span class="o">=</span>0/30/KILL/5 --exec <span class="nv">$DAEMON</span>
</span><span class='line'><span class="o">[</span> <span class="s2">&quot;$?&quot;</span> <span class="o">=</span> 2 <span class="o">]</span> &amp;amp;&amp;amp; <span class="k">return </span>2
</span><span class='line'><span class="c"># Many daemons don&#39;t delete their pidfiles when they exit.</span>
</span><span class='line'>rm -f <span class="nv">$PIDFILE</span>
</span><span class='line'><span class="k">return</span> <span class="s2">&quot;$RETVAL&quot;</span>
</span><span class='line'>&lt;/code&gt;&lt;/pre&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;<span class="o">}</span>
</span><span class='line'><span class="k">case</span> <span class="s2">&quot;$1&quot;</span> in
</span><span class='line'>  start<span class="o">)</span>&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;pre&gt;&lt;code&gt;<span class="o">[</span> <span class="s2">&quot;$VERBOSE&quot;</span> !<span class="o">=</span> no <span class="o">]</span> &amp;amp;&amp;amp; log_daemon_msg <span class="s2">&quot;Starting $DESC&quot;</span> <span class="s2">&quot;$NAME&quot;</span>
</span><span class='line'>do_start
</span><span class='line'><span class="k">case</span> <span class="s2">&quot;$?&quot;</span> in
</span><span class='line'>    0|1<span class="o">)</span> <span class="o">[</span> <span class="s2">&quot;$VERBOSE&quot;</span> !<span class="o">=</span> no <span class="o">]</span> &amp;amp;&amp;amp; log_end_msg 0 ;;
</span><span class='line'>    2<span class="o">)</span> <span class="o">[</span> <span class="s2">&quot;$VERBOSE&quot;</span> !<span class="o">=</span> no <span class="o">]</span> &amp;amp;&amp;amp; log_end_msg 1 ;;
</span><span class='line'><span class="k">esac</span>
</span><span class='line'>;;
</span><span class='line'>&lt;/code&gt;&lt;/pre&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;  stop<span class="o">)</span>&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;pre&gt;&lt;code&gt;<span class="o">[</span> <span class="s2">&quot;$VERBOSE&quot;</span> !<span class="o">=</span> no <span class="o">]</span> &amp;amp;&amp;amp; log_daemon_msg <span class="s2">&quot;Stopping $DESC&quot;</span> <span class="s2">&quot;$NAME&quot;</span>
</span><span class='line'>do_stop
</span><span class='line'><span class="k">case</span> <span class="s2">&quot;$?&quot;</span> in
</span><span class='line'>    0|1<span class="o">)</span> <span class="o">[</span> <span class="s2">&quot;$VERBOSE&quot;</span> !<span class="o">=</span> no <span class="o">]</span> &amp;amp;&amp;amp; log_end_msg 0 ;;
</span><span class='line'>    2<span class="o">)</span> <span class="o">[</span> <span class="s2">&quot;$VERBOSE&quot;</span> !<span class="o">=</span> no <span class="o">]</span> &amp;amp;&amp;amp; log_end_msg 1 ;;
</span><span class='line'><span class="k">esac</span>
</span><span class='line'>;;
</span><span class='line'>&lt;/code&gt;&lt;/pre&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;  restart|force-reload<span class="o">)</span>&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;pre&gt;&lt;code&gt;log_daemon_msg <span class="s2">&quot;Restarting $DESC&quot;</span> <span class="s2">&quot;$NAME&quot;</span>
</span><span class='line'>do_stop
</span><span class='line'><span class="k">case</span> <span class="s2">&quot;$?&quot;</span> in
</span><span class='line'>  0|1<span class="o">)</span>
</span><span class='line'>    do_start
</span><span class='line'>    <span class="k">case</span> <span class="s2">&quot;$?&quot;</span> in
</span><span class='line'>        0<span class="o">)</span> log_end_msg 0 ;;
</span><span class='line'>        1<span class="o">)</span> log_end_msg 1 ;; <span class="c"># Old process is still running</span>
</span><span class='line'>        *<span class="o">)</span> log_end_msg 1 ;; <span class="c"># Failed to start</span>
</span><span class='line'>    <span class="k">esac</span>
</span><span class='line'>    ;;
</span><span class='line'>  *<span class="o">)</span>
</span><span class='line'>    <span class="c"># Failed to stop</span>
</span><span class='line'>    log_end_msg 1
</span><span class='line'>    ;;
</span><span class='line'><span class="k">esac</span>
</span><span class='line'>;;
</span><span class='line'>&lt;/code&gt;&lt;/pre&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;  *<span class="o">)</span>&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;pre&gt;&lt;code&gt;echo <span class="s2">&quot;Usage: $SCRIPTNAME {start|stop|restart|force-reload}&quot;</span> &amp;gt;&amp;amp;2
</span><span class='line'><span class="nb">exit </span>3
</span><span class='line'>;;
</span><span class='line'>&lt;/code&gt;&lt;/pre&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;esac
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Bonne installation ;-)</p>
]]></content>
  </entry>
  
</feed>
