<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: scripting | Tym-Project]]></title>
  <link href="http://blog.tym-project.fr/blog/categories/scripting/atom.xml" rel="self"/>
  <link href="http://blog.tym-project.fr/"/>
  <updated>2014-06-22T16:21:03+00:00</updated>
  <id>http://blog.tym-project.fr/</id>
  <author>
    <name><![CDATA[Tym]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Automatiser la création ou l'édition d'un crontab]]></title>
    <link href="http://blog.tym-project.fr/2010/08/04/scripter-la-creation-ou-ledition-dun-crontab/"/>
    <updated>2010-08-04T12:00:34+00:00</updated>
    <id>http://blog.tym-project.fr/2010/08/04/scripter-la-creation-ou-ledition-dun-crontab</id>
    <content type="html"><![CDATA[<p>Crontab est un outil extrêmement pratique
servant à planifier l'exécution des tâches/commandes. Habituellement il se
gère via la commande <code>[man]crontab[/man]</code> : <code>crontab -e</code> pour éditer, <code>crontab
-l</code> pour lister...et d'autres encore. <code>crontab -u user -l</code> permet de lister
pour l'utilisateur en question. Mais comment faire pour scripter la création
ou la modification d'une ligne dans un crontab ?</p>

<!-- more -->


<p>Tout se passe en fait dans le
répertoire <code>/var/spool/cron/crontabs</code> :</p>

<pre><code>root@Server:~# ls -l /var/spool/cron/crontabs/ total 8
-rw------- 1 root crontab 294 2010-07-12 19:54 root
-rw------- 1 server crontab 264 2010-07-24 10:54 server
</code></pre>

<h2>Ajouter un crontab</h2>

<p>Partons du principe que je veux ajouter un crontab pour l'utilisateur "tym"
via un script. Il va donc falloir que je crée le fichier
<code>/var/spool/cron/crontabs/tym</code>, oui mais que faire si il existe déjà ? On va
se compliquer un peu la vie, mais vous allez comprendre pourquoi :
{% codeblock lang:bash %}</p>

<h1>!/bin/bash</h1>

<p>CRONTAB="/var/spool/cron/crontabs/tym"</p>

<p>if ! [ -e $CRONTAB ];then</p>

<pre><code>touch $CRONTAB
chown tym:crontab $CRONTAB
chmod 600 $CRONTAB
</code></pre>

<p>fi
{% endcodeblock %}</p>

<p>Comme vous pouvez le voir, on modifie les droits sur
le fichier que lorsqu'il faut créer. Pour ajouter une tâche, rien de plus
simple :</p>

<pre><code>echo '*/1 * * * * /home/tym/scripts/mon_script' &gt;&gt; $CRONTAB
</code></pre>

<p>Attention à la syntaxe
car ici pas de vérifications via la commande <code>crontab</code> !</p>

<h2>Modifier une ligne de crontab</h2>

<p>Je veux modifier la ligne que je viens de créer dans le crontab de "tym", en
faisant plutôt exécuter <code>/home/tym/scripts/mon_second_script</code> :
{% codeblock lang: bash %}</p>

<h1>!/bin/bash</h1>

<p>CRONTAB="/var/spool/cron/crontabs/tym"</p>

<p>OLD="\/home\/tym\/scripts\/mon_script"
NEW="\/home\/tym\/scripts\/mon_second_script"</p>

<p>sed "s/$OLD/$NEW/" $CRONTAB > /tmp/buffer &amp;&amp; cat /tmp/buffer > $CRONTAB
{% endcodeblock %}</p>

<p>Et hop, l'affaire est pliée ! Notez l'utilisation des "\/" pour protéger les
"/" dans le sed.</p>

<p>Bonne planification ;-)</p>
]]></content>
  </entry>
  
</feed>
